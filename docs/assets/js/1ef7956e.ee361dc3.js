"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[873],{8853:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var o=t(7462),i=t(3366),a=(t(7294),t(3905)),r=["components"],l={sidebar_position:5},p="Create a Capacitor Electron Plugin",c={unversionedId:"creatingplugins",id:"creatingplugins",isDocsHomePage:!1,title:"Create a Capacitor Electron Plugin",description:"1. Create or open a Capacitor V3 compatible plugin in your editor of choice.",source:"@site/docs/creatingplugins.md",sourceDirName:".",slug:"/creatingplugins",permalink:"/electron/docs/creatingplugins",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Config Options",permalink:"/electron/docs/configoptions"}},s=[{value:"Check out the <code>plugin-example</code> folder in the repo for a small demo plugin.",id:"check-out-the-plugin-example-folder-in-the-repo-for-a-small-demo-plugin",children:[]}],m={toc:s};function d(e){var n=e.components,t=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-a-capacitor-electron-plugin"},"Create a Capacitor Electron Plugin"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create or open a Capacitor V3 compatible plugin in your editor of choice.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a folder named ",(0,a.kt)("inlineCode",{parentName:"p"},"electron")," in the root of this plugin, with a sub-folder of ",(0,a.kt)("inlineCode",{parentName:"p"},"src")," in it.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a ts file in the above ",(0,a.kt)("inlineCode",{parentName:"p"},"src")," folder named ",(0,a.kt)("inlineCode",{parentName:"p"},"index.ts")," and either paste in the following example code of the ",(0,a.kt)("inlineCode",{parentName:"p"},"@capacitor/dialog")," plugin and edit away, or create your own from scratch:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { dialog } from 'electron'\n\nimport type {\n  DialogPlugin,\n  AlertOptions,\n  PromptOptions,\n  PromptResult,\n  ConfirmOptions,\n  ConfirmResult,\n} from '../../src/definitions';\n\nexport class Dialog implements DialogPlugin {\n  async alert(options: AlertOptions): Promise<void> {\n    await dialog.showMessageBox({message: options.message + ' --- electron'});\n  }\n\n  async prompt(options: PromptOptions): Promise<PromptResult> {\n    const val = window.prompt(options.message, options.inputText || '');\n    return {\n      value: val !== null ? val : '',\n      cancelled: val === null,\n    };\n  }\n\n  async confirm(options: ConfirmOptions): Promise<ConfirmResult> {\n    const val = window.confirm(options.message);\n    return {\n      value: val,\n    };\n  }\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a ",(0,a.kt)("inlineCode",{parentName:"p"},".gitignore")," file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"electron")," folder with the following:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"dist\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a ",(0,a.kt)("inlineCode",{parentName:"p"},".npmignore")," file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"electron")," folder with the following:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"src\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a ",(0,a.kt)("inlineCode",{parentName:"p"},"rollup.config.js")," file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"electron")," folder with the following:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"export default {\n  input: 'electron/build/electron/src/index.js',\n  output: [\n    {\n      file: 'electron/dist/plugin.js',\n      format: 'cjs',\n      sourcemap: true,\n      inlineDynamicImports: true,\n    },\n  ],\n  external: ['@capacitor/core'],\n};\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a ",(0,a.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"electron")," folder with the following:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    "allowSyntheticDefaultImports": true,\n    "declaration": true,\n    "experimentalDecorators": true,\n    "noEmitHelpers": true,\n    "importHelpers": true,\n    "lib": ["dom", "es2020"],\n    "module": "commonjs",\n    "noImplicitAny": true,\n    "noUnusedLocals": true,\n    "noUnusedParameters": true,\n    "outDir": "build",\n    "sourceMap": true,\n    "strict": false,\n    "target": "ES2017"\n  },\n  "include": ["src/**/*"]\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Modify the main ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," in the root directory, add a property to the ",(0,a.kt)("inlineCode",{parentName:"p"},"capacitor")," object so it reflects the following (android and ios shown for example only):"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"capacitor": {\n  "ios": {\n    "src": "ios"\n  },\n  "android": {\n    "src": "android"\n  },\n  "electron": {\n    "src": "electron"\n  }\n},\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Modify the main ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," in the root directory, add an entry into the ",(0,a.kt)("inlineCode",{parentName:"p"},"files")," array of the following:\n",(0,a.kt)("inlineCode",{parentName:"p"},"electron/"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Modify the main ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," in the root directory, add an entry into the ",(0,a.kt)("inlineCode",{parentName:"p"},"scripts")," object of the following:\n",(0,a.kt)("inlineCode",{parentName:"p"},'"build-electron": "tsc --project electron/tsconfig.json && rollup -c electron/rollup.config.js && rimraf ./electron/build",'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Modify the main ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," in the root directory, edit the ",(0,a.kt)("inlineCode",{parentName:"p"},"build")," entry in the ",(0,a.kt)("inlineCode",{parentName:"p"},"scripts")," object to be the following:\n",(0,a.kt)("inlineCode",{parentName:"p"},'"build": "npm run clean && npm run docgen && tsc && rollup -c rollup.config.js && npm run build-electron",'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run the ",(0,a.kt)("inlineCode",{parentName:"p"},"build")," npm script to build your plugin.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Release it to NPM then use in your capacitor apps as any other native plugin like android or ios. (dont forget to use ",(0,a.kt)("inlineCode",{parentName:"p"},"npx cap sync/copy/update/open @capacitor-community/electron"),")"))),(0,a.kt)("h3",{id:"check-out-the-plugin-example-folder-in-the-repo-for-a-small-demo-plugin"},"Check out the ",(0,a.kt)("inlineCode",{parentName:"h3"},"plugin-example")," folder in the repo for a small demo plugin."))}d.isMDXComponent=!0}}]);